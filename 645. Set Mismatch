TWO WAYS -->similar but run time is efficient for 2nd way

/*class Solution {
    public int[] findErrorNums(int[] nums) {

       int i=0;
        while(i<nums.length){

            if(nums[i]>nums.length || nums[i]<1 || nums[i]==i-1 || nums[i]==nums[nums[i]-1]){
                i++;
            }
            else{
                int index=nums[i]-1;
                int t=nums[i];
                nums[i]=nums[index];
                nums[index]=t;
            }
        }
        for(int j=0;j<nums.length;j++){
            if(nums[j]!=j+1){
                return new int[]{nums[j],j+1};
            }
        }
        return new int[]{-1,-1};
    }
   
}
*/

// 2nd way

class Solution {
    public int[] findErrorNums(int[] nums) {
        
        int n=nums.length;
        int i=0;
        while(i<n){
            if(nums[i]>n){
                i++;
            }
            else{
                int c=nums[i]-1;
                if(nums[i]!=nums[c])
                swap(nums,i,c);
                else
                i++;
            }
        }
        
        for(int index=0;index<n;index++){
            if(nums[index]!=index+1){
                return new int[]{nums[index],index+1};
               
            }
        }
        return new int[]{-1,-1};
        
    }
    public void swap(int[] nums,int i,int j){
        nums[i]=nums[i]+nums[j];
        nums[j]=nums[i]-nums[j];
        nums[i]=nums[i]-nums[j];
    }
}
