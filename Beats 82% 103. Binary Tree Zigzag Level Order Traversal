class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<>();
        Deque<TreeNode> q1=new LinkedList<>();
        if(root==null){
            return res;
        }
        boolean rev=false;
        q1.offer(root);
        while(!q1.isEmpty()){
            int n=q1.size();
            List<Integer> l=new ArrayList<>();
            for(int i=0;i<n;i++){
                     if(!rev){
                    TreeNode n1=q1.poll();
                    l.add(n1.val);
                    if(n1.left!=null)
                    q1.addLast(n1.left);
                    if(n1.right!=null)
                    q1.addLast(n1.right);
                
                }
                else{
                    TreeNode n1=q1.pollLast();
                    l.add(n1.val);
                    if(n1.right!=null)
                    q1.offerFirst(n1.right);
                  if(n1.left!=null)
                    q1.offerFirst(n1.left);
                    
                     
                }
               
               
            }
            rev=!rev;
            if(!l.isEmpty())
            res.add(l);

        }
        return res;
        
    }
}
