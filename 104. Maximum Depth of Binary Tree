I solved in 2 ways


1st  approach using recursive calls

class Solution {
    public int maxDepth(TreeNode root) {
        if(root==null){
            return 0;
        }
        return isHelp(root);
    }
    public int isHelp(TreeNode root){
        if(root==null){
            return 1;
        }
        if(root.left==null && root.right==null){
            return 1;
        }
        return 1+Math.max(isHelp(root.left),isHelp(root.right));
    }
}

2nd approach using level order traversal

 /* if(root==null){
            return 0;
        }
        int ht=0;
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty()){
            int level=q.size();
            ht++;
            for(int i=0;i<level;i++){
                TreeNode node=q.poll();
                if(node.left!=null){
                    q.offer(node.left);
                }
                if(node.right!=null){
                    q.offer(node.right);
                }
            }
        }
        return ht;
*/
