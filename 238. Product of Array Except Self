class Solution {
   /* public int[] productExceptSelf(int[] nums) {

        //This approach is statisfing only 19 test cases/out of 22 -->time out of running


       int[] ans=new int[nums.length];
       int k=0;
       for(int i=0;i<nums.length;i++){
          ans[k++]= check(nums,i-1,i+1);
       }

      return ans; 
    }
    public int check(int[] nums,int i,int j){
        int ans=1;
        while(i>=0){
            ans*=nums[i--];
        }
        int a=1;
        while(j<nums.length){
            a*=nums[j++];
        }
        return ans*a;
    }
    */

     public int[] productExceptSelf(int[] nums) {
         int[] ans=new int[nums.length];
         int k=0;
         int[] left=new int[nums.length];
         int[] right=new int[nums.length];
         left[0]=1;
         right[nums.length-1]=1;

         for(int i=1;i<nums.length;i++){
             left[i]=nums[i-1]*left[i-1];
         }
         for(int i=nums.length-2;i>=0;i--){
             right[i]=nums[i+1]*right[i+1];
         }
         for(int i=0;i<nums.length;i++){
             ans[i]=left[i]*right[i];
         }

            return ans;
     }
}
